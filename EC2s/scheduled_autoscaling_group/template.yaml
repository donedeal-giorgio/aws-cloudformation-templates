AWSTemplateFormatVersion: "2010-09-09"
Metadata:
  Author: "Giorgio Carta"
Description: "ASG example with scheduling"
Parameters:
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
Resources:
  DummyServerTemplate:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Description: "A template to generate EC2 instances for my fleet"
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceType: t2.micro
      UserData:
        Fn::Base64:
          !Sub |
          #! /bin/bash
          sudo yum -y update
          sudo yum install httpd -y
          aws s3 cp s3://gcdataset/tokyo.zip .
          unzip tokyo.zip -d /var/www/html/
          service httpd start
  AutoScalingGroup:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      MaxSize: 3
      MinSize: 1
      DesiredCapacity: 2
      LaunchConfigurationName: !Ref DummyServerTemplate
      AvailabilityZones:
        Fn::GetAZs:
          Ref: "AWS::Region"
      HealthCheckType: EC2
      MaxInstanceLifetime: 604800
  ASGScheduleOut:
    Type: AWS::AutoScaling::ScheduledAction
    Description: "From 8am scale out to 5 pods"
    Properties:
      AutoScalingGroupName: !Ref AutoScalingGroup
      DesiredCapacity: 5
      MinSize: 2
      MaxSize: 5
      Recurrence: "0 8 * * *"
  ASGScheduleIn:
    Type: AWS::AutoScaling::ScheduledAction
    Description: "From 11am scale in to 3 pods"
    Properties:
      AutoScalingGroupName: !Ref AutoScalingGroup
      DesiredCapacity: 3
      MinSize: 1
      MaxSize: 3
      Recurrence: "0 11 * * *"







